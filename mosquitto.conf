# Config file for mosquitto
#
# This isn't a stable file format.
# Ultimately it should probably mirror the format used by rsmb.
#
# Default values are shown, uncomment to change.

# Network interface to bind to, e.g. eth0
# Optionally specify a port number if not using the default 1883.
# For example "interface eth0:1834"
#interface

# Port to bind to.
# This option may be repeated to make mosquitto listen on multiple ports.
#port 1883

# Save persistent message data to disk (1/0).
# This saves information about all messages, including subscriptions,
# currently in-flight messages and retained messages.
#persistence 0

# Location for persistent database. Must include trailing /
# Default is an empty string (current directory).
# Set to /var/lib/mosquitto/ if running as a proper service.
#persistence_location

# Time in seconds to wait before resending an outgoing message.
#msg_timeout 10

# Time in seconds between updates of the $SYS tree.
#sys_interval 10

# Write process id to a file. Default is a blank string which means a pid file
# shouldn't be written.
#pid_file

# When run as root, drop privileges to this user and its primary group.
# Leave blank to stay as root, but this is not recommended.
# If run as a non-root user, this setting has no effect.
#user mosquitto

# ======================================================================
# Logging
# ======================================================================

# Places to log to. Use multiple log_dest lines for multiple logging
# destinations.
# Possible destinations are: stdout stderr syslog topic
# stdout and stderr log to the console on the named output.
# syslog uses the userspace syslog facility which usually ends up in
# /var/log/messages or similar.
# topic logs to the broker topic 'broker/log/<severity>', where severity is one
# of D, E, W, N, I which are debug, error, warning, notice and information.
# Use "log_dest none" if you wish to disable logging.
#log_dest stderr

# Types of messages to log. Use multiple log_type lines for logging
# multiple types of messages.
# Possible types are: debug, error, warning, notice, information, none.
# Note that if you have a "none" type followed by a non-"none" type, then then
# the non-"none" type will take precedence.
#log_type error
#log_priority warning
